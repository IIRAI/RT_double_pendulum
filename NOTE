--- COSE DA CONTROLLARE:

- evitare errore di equilibrio instabile verticale 

- analizzare errore numerico nella risoluzione RK4

- creare modo per ridurre la complessità computazionale RK2/RK1 per rimanere all'interno delle specifiche di time constrain.

---------------------------------------------------------------------------------

--- GIUSTIFICAZIONE PER THREAD DEDICATI.   

Per la gestione computazionale-grafica dei pendoli sarebbe stato possibile scegliere tra due soluzioni: creare due task, una per la parte computazionale di TUTTI i pendoli e 
una per la parte grafica di TUTTI i pendoli oppure dei thread dedicati per ciascun pendolo, con quindi perte computazionale e grafica insieme e dedicate per ogni pendolo.
PRO e CONTRO delle due soluzioni;
1) 	PRO:
	-genera solo due task

	CONTRO:
	-per aumentare l'efficienza sarebbe necessario:
		- organizzare un sistema con semafori per garantire l'alternanza delle esecuzioni delle due task e per l'accesso alle variabili globali.
		- garantire un periodo variabile secondo il numero di pendoli.

2)	PRO:
	- tutte le task sono uguali e con stessa priorità e stesso periodo.
	- l'ordine di esecuzione della parte computazionale e grafica è garantita implicitamente dalla task (per come è stata scritta) non c'è bisogno di una sovrastruttura 
	come i semafori, garantendo una maggiore semplicità e comprensibilità del codice.

	CONTRO:
	- numero di task generalmente più alto fino a un massimo di nove.

--- GIUSTIFICAZIONE FUNZIONI DEDICATE PER LA RICERCA DEI DATI.
è più facile l'introduzione di nuovi parametri di input e modificare il programma di conseguenza; infatti basta fare una funzione uguale identica alla vecchia con nuovi parametri di ricerca
